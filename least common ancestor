#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

struct node
{

    int data;
    struct node *left;
    struct node *right;

};

struct node* insert( struct node* root, int data )
{

	if(root == NULL)
        {

        struct node* node = (struct node*)malloc(sizeof(struct node));

        node->data = data;

        node->left = NULL;
        node->right = NULL;
        return node;

	}
	else
    {

		struct node* cur;

		if(data <= root->data) {
            cur = insert(root->left, data);
            root->left = cur;
		} else {
            cur = insert(root->right, data);
            root->right = cur;
		}

		return root;
	}
}
struct node* lca( struct node *root, int v1, int v2 )
{
    struct node *cur=root;
    while(cur)
    {
        if(cur->data==v1||cur->data==v2)
            return (root->data);

        if(cur->data>v1 && cur->data<v2)
            return (cur->data);

        if(cur->data<v1 && cur->data>v2)
            return (cur->data);

        if(v1<cur->data && v2<cur->data)
             cur=cur->left;

        else if(v1>cur->data && v2>cur->data)
             cur=cur->right;
    }
}
 int main()
 {

    struct node* root = NULL;

    int t;
    int data;

    scanf("%d", &t);

    while(t-- > 0) {
        scanf("%d", &data);
        root = insert(root, data);
    }
  	int v1;
  	int v2;

  	scanf("%d%d", &v1, &v2);
	struct node *ans = lca(root, v1, v2);
  	printf("%d", ans->data);

    return 0;
}
